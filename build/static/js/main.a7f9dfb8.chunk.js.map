{"version":3,"sources":["constants/index.js","localStorageMiddleware.js","reducer.js","components/styles.js","components/Room.js","components/Booking.js","actions/index.js","index.js","components/App.js","store.js"],"names":["actions_types","GET_SAVED_ROOMS","UPDATE_ROOMS","SAVE_ROOMS","storageMiddleware","store","next","action","rooms","type","constants","window","localStorage","setItem","JSON","parse","getItem","length","Object","objectSpread","e","console","log","getState","stringify","reducer","state","arguments","undefined","slice","_action$payload","payload","_action$payload$ev","ev","index","map","room","idx","target","checked","selected","adults","children","name","value","StyledContainer","styled","section","_templateObject","StyledApp","div","_templateObject2","StyledRoom","_templateObject3","props","StyledRoomInner","_templateObject4","StyledInput","input","_templateObject5","StyledRoomName","h4","_templateObject6","StyledSelect","select","_templateObject7","Input","_templateObject8","StyledClear","_templateObject9","Room","_onChange","_this","_this$props","this","_this$props$room","react_default","a","createElement","onChange","className","disabled","item","key","concat","Component","Booking","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","_onSubmit","inherits","createClass","getSavedRooms","updateRooms","preventDefault","saveRooms","_this2","_this$props$rooms","data-test","onSubmit","Room_Room","connectedBooking","connect","dispatch","ReactDOM","render","createStore","applyMiddleware","localstorageMiddleware","es","components_Booking","document","getElementById"],"mappings":"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","file":"static/js/main.a7f9dfb8.chunk.js","sourcesContent":["const actions_types = {\r\n  GET_SAVED_ROOMS: 'GET_SAVED_ROOMS',\r\n  UPDATE_ROOMS: 'UPDATE_ROOMS',\r\n  SAVE_ROOMS: 'SAVE_ROOMS'\r\n};\r\n\r\nexport default actions_types;\r\n","import constants from './constants';\r\nconst storageMiddleware = (store) => {return (next) => {return (action) => {\r\n  let rooms = [];\r\n  if (action.type === constants.GET_SAVED_ROOMS) {\r\n    if (\r\n      window &&\r\n      window.localStorage &&\r\n      typeof window.localStorage.setItem === 'function'\r\n    ) {\r\n      try {\r\n        rooms = JSON.parse(localStorage.getItem('rooms_booking')) || [];\r\n        if (rooms.length) {\r\n          next({ ...action, rooms });\r\n        }\r\n      } catch (e) {\r\n        console.log('error parsing response');\r\n      }\r\n    }\r\n  } else if (action.type === constants.SAVE_ROOMS) {\r\n    rooms = store.getState();\r\n    if (\r\n      window &&\r\n      window.localStorage &&\r\n      typeof window.localStorage.setItem === 'function'\r\n    ) {\r\n      localStorage.setItem('rooms_booking', JSON.stringify(rooms));\r\n    }\r\n  } else {\r\n    next(action);\r\n  }\r\n};};};\r\nexport default storageMiddleware;\r\n","import constants from './constants';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case constants.GET_SAVED_ROOMS: {\r\n      return action.rooms;\r\n    }\r\n    case constants.UPDATE_ROOMS: {\r\n      const rooms = state.slice(0);\r\n      const { ev = {}, index } = action.payload;\r\n      const updatedRooms = rooms.map((room, idx) => {\r\n        if (ev.target.type === 'checkbox' && idx !== 0) {\r\n          if (ev.target.checked) {\r\n            room.selected = idx <= index;\r\n          } else if (idx >= index) {\r\n              room.selected = false;\r\n              room.adults = 1;\r\n              room.children = 0;\r\n            }\r\n        }\r\n        if (idx === index) {\r\n          room[ev.target.name] = ev.target.value;\r\n        }\r\n        return room;\r\n      });\r\n      return updatedRooms;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n/*Main container section*/\r\nexport const StyledContainer = styled.section`\r\n  padding: 10px;\r\n`;\r\n\r\nexport const StyledApp = styled.div`\r\n  font-family: sans-serif;\r\n  font-size: 100%;\r\n`;\r\n/* styles for each room section*/\r\nexport const StyledRoom = styled.section`\r\n  width: 10%;\r\n  min-width: 12.5rem;\r\n  margin: 1.2rem;\r\n  border-radius: 0.625rem;\r\n  border: 2px solid #ccc;\r\n  background-color: #ddd;\r\n  display: inline-block;\r\n  text-align: ${(props) => {return (props.index > 0 ? 'center' : '');}};\r\n`;\r\n/* section for Adults and children divs*/\r\nexport const StyledRoomInner = styled.section`\r\n  padding: 15px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  border-radius: 0px 0px 10px 10px;\r\n  background-color: ${(props) => {return (props.checked ? 'white' : '');}};\r\n`;\r\n/*checkbox*/\r\nexport const StyledInput = styled.input`\r\n  float: left;\r\n  margin-top: 1.25rem;\r\n  margin-left: 3.125rem;\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2px solid #ccc;\r\n`;\r\n\r\n/* when room is not selected/unchecked, room name shoud not be bold */\r\nexport const StyledRoomName = styled.h4`\r\n  font-weight: ${(props) => {return (props.checked ? '' : 'normal');}};\r\n`;\r\n\r\n/* To increase the size of the select option*/\r\nexport const StyledSelect = styled.select`\r\n  height: 25px;\r\n  width: 40px;\r\n  font-size: 15px;\r\n`;\r\n/*Input submit button*/\r\nexport const Input = styled.input`\r\n  background-color: #b8bdb8;\r\n  color: rgb(10, 10, 10);\r\n  padding: 10px;\r\n  margin-left: 12px;\r\n  width: 6rem;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  display: inline-block;\r\n  border: none;\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    width: 15%;\r\n  }\r\n  @media only screen and (max-width: 1023px) {\r\n    width: 18%;\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    width: 25%;\r\n  }\r\n  @media only screen and (max-width: 320px) {\r\n    width: 25%;\r\n  }\r\n  @media only screen and (max-width: 290px) {\r\n    width: 35%;\r\n  }\r\n  @media only screen and (max-width: 290px) {\r\n    width: 40%;\r\n  }\r\n  @media only screen and (max-width: 290px) {\r\n    width: 45%;\r\n  }\r\n`;\r\nexport const StyledClear = styled.div`\r\n  clear: both;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  StyledRoom,\r\n  StyledRoomInner,\r\n  StyledInput,\r\n  StyledRoomName,\r\n  StyledSelect\r\n} from './styles';\r\n\r\nexport default class Room extends Component {\r\n  _onChange = (ev) => {\r\n    this.props._onChange(ev, this.props.index);\r\n  };\r\n  render() {\r\n    const { room = {}, index } = this.props;\r\n    return (\r\n      <StyledRoom index>\r\n        {index > 0 ? (\r\n          <StyledInput\r\n            type=\"checkbox\"\r\n            checked={room.selected}\r\n            onChange={this._onChange}\r\n          />\r\n        ) : null}\r\n        <StyledRoomName checked={room.selected}>{room.name}</StyledRoomName>\r\n\r\n        <StyledRoomInner checked={room.selected}>\r\n          <div>\r\n            <p>Adults</p>\r\n            <p>(18+)</p>\r\n            <StyledSelect\r\n              className=\"styled-select\"\r\n              value={room.adults}\r\n              disabled={!room.selected}\r\n              onChange={this._onChange}\r\n              name=\"adults\"\r\n            >\r\n              {[1, 2].map((item, index) => {return (\r\n                <option value={item} key={`${index}`}>\r\n                  {item}\r\n                </option>\r\n              );})}\r\n            </StyledSelect>\r\n          </div>\r\n          <div>\r\n            <p>Children</p>\r\n            <p>(0-17)</p>\r\n            <StyledSelect\r\n              className=\"styled-select\"\r\n              value={room.children}\r\n              disabled={!room.selected}\r\n              onChange={this._onChange}\r\n              name=\"children\"\r\n            >\r\n              {[0, 1, 2].map((item, index) => {return (\r\n                <option value={item} key={`${index}`}>\r\n                  {item}\r\n                </option>\r\n              );})}\r\n            </StyledSelect>\r\n          </div>\r\n        </StyledRoomInner>\r\n      </StyledRoom>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Room from './Room';\r\nimport { connect } from 'react-redux';\r\nimport { getSavedRooms, updateRooms, saveRooms } from '../actions';\r\nimport { StyledContainer, StyledClear, Input } from './styles';\r\n\r\nexport class Booking extends Component {\r\n  constructor() {\r\n    super();\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onSubmit = this._onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.getSavedRooms();\r\n  }\r\n  _onChange(ev, index) {\r\n    this.props.updateRooms(ev, index);\r\n  };\r\n\r\n  _onSubmit(ev) {\r\n    ev.preventDefault();\r\n    this.props.saveRooms();\r\n  };\r\n  render() {\r\n    const { rooms = [] } = this.props;\r\n    return (\r\n      <StyledContainer data-test=\"styledcontainer\">\r\n        <form onSubmit={this._onSubmit} data-test=\"form-element\">\r\n          {rooms.map((room, index) => {\r\n            return (\r\n              <Room\r\n                data-test=\"room-element\"\r\n                room={room}\r\n                key={`${index}`}\r\n                index={index}\r\n                _onChange={this._onChange}\r\n              />\r\n            );\r\n          })}\r\n          <StyledClear />\r\n          <Input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </StyledContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rooms: state\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getSavedRooms: () => {return dispatch(getSavedRooms());},\r\n    updateRooms: (ev, index) => {return dispatch(updateRooms(ev, index));},\r\n    saveRooms: () => {return dispatch(saveRooms());}\r\n  };\r\n};\r\nconst connectedBooking = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Booking);\r\nexport default connectedBooking;\r\n","import constants from '../constants';\r\n\r\nfunction getSavedRooms(rooms = []) {\r\n  return {\r\n    type: constants.GET_SAVED_ROOMS,\r\n  };\r\n}\r\n\r\nfunction updateRooms(ev, index) {\r\n  return {\r\n    type: constants.UPDATE_ROOMS,\r\n    payload: {\r\n      ev,\r\n      index\r\n    }\r\n  };\r\n}\r\n\r\nfunction saveRooms() {\r\n  return {\r\n    type: constants.SAVE_ROOMS\r\n  };\r\n}\r\nexport { getSavedRooms, updateRooms, saveRooms };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { StyledApp } from './components/styles';\n\nReactDOM.render(\n  <StyledApp>\n    <App />\n  </StyledApp>,\n  document.getElementById('root')\n);\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from '../store';\r\nimport Booking from './Booking';\r\nimport './styles.js';\r\nexport default () => {\r\n  const store = configureStore();\r\n  return (\r\n    <Provider store={store}>\r\n      <Booking />\r\n    </Provider>\r\n  );\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport localstorageMiddleware from './localStorageMiddleware';\r\nimport reducer from './reducer';\r\nexport default function configureStore() {\r\n  const initialState = [\r\n    {\r\n      name: 'Room 1',\r\n      selected: true,\r\n      adults: 1,\r\n      children: 0\r\n    },\r\n    {\r\n      name: 'Room 2',\r\n      selected: false,\r\n      adults: 1,\r\n      children: 0\r\n    },\r\n    {\r\n      name: 'Room 3',\r\n      selected: false,\r\n      adults: 1,\r\n      children: 0\r\n    },\r\n    {\r\n      name: 'Room 4',\r\n      selected: false,\r\n      adults: 1,\r\n      children: 0\r\n    }\r\n  ];\r\n  const store = createStore(\r\n    reducer,\r\n    initialState,\r\n    applyMiddleware(localstorageMiddleware)\r\n  );\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}